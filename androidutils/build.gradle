apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "com.uwetrottmann.androidutils"
version = "2.4.2-SNAPSHOT"

android {
    compileSdkVersion 30 // Android 11

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26 // Android 8.0
        versionCode 2
        versionName project.version
    }

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // https://developer.android.com/jetpack/androidx/releases/annotation
    implementation "androidx.annotation:annotation:1.1.0"
    // https://developer.android.com/jetpack/androidx/releases/loader
    implementation "androidx.loader:loader:1.1.0"
    // https://developer.android.com/jetpack/androidx/releases/appcompat
    implementation "androidx.appcompat:appcompat:1.2.0"
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate { project ->
    publishing {
        publications {
            central(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                artifact androidJavadocsJar
                artifact androidSourcesJar

                artifactId = 'androidutils'

                pom {
                    name = "AndroidUtils"
                    description = "Little helpers for Android development."
                    url = "https://github.com/UweTrottmann/AndroidUtils"

                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }

                    developers {
                        developer {
                            id = "uwetrottmann"
                            name = "Uwe Trottmann"
                        }
                    }

                    scm {
                        connection = "scm:git:git@github.com:UweTrottmann/AndroidUtils.git"
                        developerConnection = "scm:git:git@github.com:UweTrottmann/AndroidUtils.git"
                        url = "https://github.com/UweTrottmann/AndroidUtils"
                    }
                }
            }
        }

        repositories {
            maven {
                name = "Central"
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                if (rootProject.hasProperty('SONATYPE_NEXUS_USERNAME')
                        && rootProject.hasProperty('SONATYPE_NEXUS_PASSWORD')) {
                    credentials {
                        username SONATYPE_NEXUS_USERNAME
                        password SONATYPE_NEXUS_PASSWORD
                    }
                }
            }
        }
    }

    signing {
        if (!rootProject.hasProperty('signing.keyId')
                || !rootProject.hasProperty('signing.password')
                || !rootProject.hasProperty('signing.secretKeyRingFile')) {
            println "WARNING: Signing properties missing, published artifacts will not be signed."
        }
        sign publishing.publications.central
    }

}
